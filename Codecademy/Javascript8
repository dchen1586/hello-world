//1

var james = {
    job: "programmer",
    married: false
};

function Person(job, married) {
    this.job = job;
    this.married = married;
}

// create a "gabby" object using the Person constructor!
var gabby = new Person("student", true);

//2

function Person(job, married) {
    this.job = job;
    this.married = married;
    this.speak = function (){
        console.log("Hello!");
    }
    
}

var user = new Person("Codecademy Student",false);
user.speak();

//3

var james = {
    job: "programmer",
    married: false,
    speak: function(speak) {
        console.log("Hello, I am feeling " + speak);
    }
};

james.speak("great");
james.speak("just okay");

//4

var james = {
    job: "programmer",
    married: false,
    sayJob: function() {
        console.log("Hi, I work as a " + james.job);
        
    }
};

// james' first job
james.sayJob();

// change james' job to "super programmer" here
james.job = "super programmer";

// james' second job
james.sayJob();

//5

var james = {
    job: "programmer",
    married: false
};

// set to the first property name of "james"
var aProperty = "job";

// print the value of the first property of "james" 
// using the variable "aProperty"
console.log(james[aProperty]);

//6

// complete these definitions so that they will have
// the appropriate types
var anObj = { job: "I'm an object!" };
var aNumber = 42;
var aString = "I'm a string!";

console.log(typeof anObj); // should print "object"
console.log(typeof aNumber ); // should print "number"
console.log(typeof aString); // should print "string"

//7

var myObj = {
    name: "chicken"
};

console.log( myObj.hasOwnProperty('name') ); // should print true
console.log( myObj.hasOwnProperty('nickname') ); // should print false

//8

var suitcase = {
    shirt: "Hawaiian"
};
if (suitcase.hasOwnProperty("shorts") === true) {
    console.log(suitcase.shorts);
} else {
    suitcase.shorts = "yay";
    console.log(suitcase.shorts);
}

//9

